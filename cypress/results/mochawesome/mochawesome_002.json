{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 1,
    "failures": 0,
    "start": "2022-08-23T17:07:45.612Z",
    "end": "2022-08-23T17:08:25.794Z",
    "duration": 40182,
    "testsRegistered": 5,
    "passPercent": 75,
    "pendingPercent": 20,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b5379133-e952-44d9-a3ab-e16eae907e17",
      "title": "",
      "fullFile": "cypress/e2e/fistTest.spec.js",
      "file": "cypress/e2e/fistTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e7f451e-c8f6-406c-ba69-9ccd23ee6cfd",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 5331,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', `${Cypress.env('apiUrl')}/api/articles`).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the article');\n  expect(xhr.response.body.article.description).to.equal('This is a description');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress/e2e/fistTest.spec.js:120:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "b1b91378-a694-487a-b90a-b6eee8e0f4ea",
              "parentUUID": "3e7f451e-c8f6-406c-ba69-9ccd23ee6cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have tags with routing object",
              "fullTitle": "Test with backend should have tags with routing object",
              "timedOut": null,
              "duration": 2073,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "bdb0bd94-9f33-4e96-a154-2e6996ca15f0",
              "parentUUID": "3e7f451e-c8f6-406c-ba69-9ccd23ee6cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify global feed likes count",
              "fullTitle": "Test with backend should verify global feed likes count",
              "timedOut": null,
              "duration": 3412,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}');\ncy.intercept('GET', '**/api/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain('10');\n  expect(listOfButtons[1]).to.contain('200');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[1].slug;\n  cy.intercept('POST', `**/articles/${articleLink}/favorite`, file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '201');",
              "err": {},
              "uuid": "d34a883e-b701-4a70-b03a-7f47aacd967c",
              "parentUUID": "3e7f451e-c8f6-406c-ba69-9ccd23ee6cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "469113c7-37eb-4575-997f-020fdcbd198c",
              "parentUUID": "3e7f451e-c8f6-406c-ba69-9ccd23ee6cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 7614,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  article: {\n    tagList: [],\n    title: \"Request from API\",\n    description: \"This is a request\",\n    body: \"I created this with the API call\"\n  }\n};\ncy.intercept('DELETE', '**/articles/**').as('deleteArticle');\ncy.get('@token').then(token => {\n  cy.request({\n    url: `${Cypress.env('apiUrl')}/api/articles/`,\n    headers: {\n      'authorization': `Token ${token}`\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click().as('deleteArticle');\n  cy.wait('@deleteArticle');\n  cy.request({\n    url: `${Cypress.env('apiUrl')}/api/articles?limit=10&offset=0`,\n    headers: {\n      'authorization': `Token ${token}`\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {},
              "uuid": "e9bc678c-cc6d-4271-b32b-1a9f4aae862b",
              "parentUUID": "3e7f451e-c8f6-406c-ba69-9ccd23ee6cfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdb0bd94-9f33-4e96-a154-2e6996ca15f0",
            "d34a883e-b701-4a70-b03a-7f47aacd967c",
            "e9bc678c-cc6d-4271-b32b-1a9f4aae862b"
          ],
          "failures": [
            "b1b91378-a694-487a-b90a-b6eee8e0f4ea"
          ],
          "pending": [
            "469113c7-37eb-4575-997f-020fdcbd198c"
          ],
          "skipped": [],
          "duration": 18430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}