{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 4,
    "pending": 1,
    "failures": 1,
    "start": "2022-08-23T17:05:46.942Z",
    "end": "2022-08-23T17:06:26.717Z",
    "duration": 21327,
    "testsRegistered": 6,
    "passPercent": 66.66666666666667,
    "pendingPercent": 16.666666666666668,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2e2a2651-1a4e-46b6-bc51-721e93e71a1b",
      "title": "",
      "fullFile": "cypress/e2e/secondTest.spec.js",
      "file": "cypress/e2e/secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aca187f8-1982-4d82-9d88-2c75bbc82bc2",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify user can log out successfully",
              "fullTitle": "Test log out verify user can log out successfully",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "bed29473-2245-4a16-812c-72b1205a4da9",
              "parentUUID": "aca187f8-1982-4d82-9d88-2c75bbc82bc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bed29473-2245-4a16-812c-72b1205a4da9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4c32aa91-04f7-4185-8f0b-6ef08fc4c6ac",
      "title": "",
      "fullFile": "cypress/e2e/fistTest.spec.js",
      "file": "cypress/e2e/fistTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33ca6a5f-d2ca-44dd-8e03-7c048cd8c6ff",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 5157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', `${Cypress.env('apiUrl')}/api/articles`).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the article');\n  expect(xhr.response.body.article.description).to.equal('This is a description');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress/e2e/fistTest.spec.js:120:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "e05c8c18-a56d-46a5-8b61-5d4979dfc4c3",
              "parentUUID": "33ca6a5f-d2ca-44dd-8e03-7c048cd8c6ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have tags with routing object",
              "fullTitle": "Test with backend should have tags with routing object",
              "timedOut": null,
              "duration": 2021,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "b82cc024-40fd-4afb-833d-17a4f611b367",
              "parentUUID": "33ca6a5f-d2ca-44dd-8e03-7c048cd8c6ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify global feed likes count",
              "fullTitle": "Test with backend should verify global feed likes count",
              "timedOut": null,
              "duration": 3327,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}');\ncy.intercept('GET', '**/api/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain('10');\n  expect(listOfButtons[1]).to.contain('200');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[1].slug;\n  cy.intercept('POST', `**/articles/${articleLink}/favorite`, file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '201');",
              "err": {},
              "uuid": "7730c1e3-d55f-4583-8a9c-3d68628bf711",
              "parentUUID": "33ca6a5f-d2ca-44dd-8e03-7c048cd8c6ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "58b73705-13bd-49f7-89b3-34b67b762540",
              "parentUUID": "33ca6a5f-d2ca-44dd-8e03-7c048cd8c6ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 7797,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  article: {\n    tagList: [],\n    title: \"Request from API\",\n    description: \"This is a request\",\n    body: \"I created this with the API call\"\n  }\n};\ncy.intercept('DELETE', '**/articles/**').as('deleteArticle');\ncy.get('@token').then(token => {\n  cy.request({\n    url: `${Cypress.env('apiUrl')}/api/articles/`,\n    headers: {\n      'authorization': `Token ${token}`\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click().as('deleteArticle');\n  cy.wait('@deleteArticle');\n  cy.request({\n    url: `${Cypress.env('apiUrl')}/api/articles?limit=10&offset=0`,\n    headers: {\n      'authorization': `Token ${token}`\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {},
              "uuid": "cc6d2cc7-b3ac-4dc9-9a35-95ddb9cc662e",
              "parentUUID": "33ca6a5f-d2ca-44dd-8e03-7c048cd8c6ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b82cc024-40fd-4afb-833d-17a4f611b367",
            "7730c1e3-d55f-4583-8a9c-3d68628bf711",
            "cc6d2cc7-b3ac-4dc9-9a35-95ddb9cc662e"
          ],
          "failures": [
            "e05c8c18-a56d-46a5-8b61-5d4979dfc4c3"
          ],
          "pending": [
            "58b73705-13bd-49f7-89b3-34b67b762540"
          ],
          "skipped": [],
          "duration": 18302,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}